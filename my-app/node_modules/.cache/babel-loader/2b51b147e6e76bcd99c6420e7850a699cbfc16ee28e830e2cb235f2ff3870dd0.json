{"ast":null,"code":"var _jsxFileName = \"D:\\\\mern stack todo\\\\my-app\\\\src\\\\component\\\\workareacomponet\\\\Workarea.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { IconButton } from '@mui/material';\nimport PersonIcon from '@mui/icons-material/Person';\nimport SendOutlinedIcon from '@mui/icons-material/SendOutlined';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { io } from 'socket.io-client';\nimport Messageself from '../messagecomponet/Messageself';\nimport Messageother from '../messagecomponet/Messageother';\nimport { MyContext, MyContextMessage } from '../contextapi/CreateContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Workarea() {\n  _s();\n  const ENDPOINT = 'http://localhost:3001';\n  const {\n    id\n  } = useContext(MyContext);\n  const {\n    state\n  } = useLocation();\n  const {\n    message,\n    setNewMessage\n  } = useContext(MyContextMessage);\n  const [text, setText] = useState('');\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    const newSocket = io(ENDPOINT);\n    setSocket(newSocket);\n\n    // Handle incoming messages\n    newSocket.on('message received', newMessage => {\n      console.log(\"Received new message:\", newMessage);\n      alert(n);\n      setNewMessage(prevMessages => [...prevMessages, newMessage]);\n    });\n\n    // Setup and join room on component mount\n    newSocket.emit('setup', id);\n    newSocket.emit('join chat', '123'); // Assuming '123' is the chat room ID\n\n    // Clean up the socket connection\n    return () => {\n      newSocket.disconnect();\n    };\n  }, [id, state.senderId, setNewMessage]);\n  const sendMessage = () => {\n    let currentTime = new Date();\n    let hours = currentTime.getHours();\n    let minutes = currentTime.getMinutes();\n    let time = hours + ':' + minutes;\n    const messageObj = {\n      Chatid: id,\n      Senderid: state.senderId,\n      text: text,\n      createdAt: time,\n      updatedAt: time\n    };\n    axios.post(`http://localhost:3001/newmessage`, messageObj).then(response => {\n      // Emit new message event to the server using the existing socket\n      if (socket) {\n        socket.emit('new message', messageObj);\n      }\n      setText('');\n      setNewMessage([...message, messageObj]); // Update local state immediately\n    }).catch(error => {\n      console.error('Error sending message:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-workarea\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-head\",\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title\",\n          children: state.Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"timespan\",\n          children: state.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"delete\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: message && message.map((elem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: id === elem.Chatid ? /*#__PURE__*/_jsxDEV(Messageself, {\n          dataprops: elem.text,\n          dataprops2: elem.updatedAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Messageother, {\n          dataprops: elem.text,\n          dataprops2: elem.updatedAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => {\n          setText(e.target.value);\n        },\n        placeholder: \"Type Text Here\",\n        value: text,\n        name: \"text\",\n        className: \"input-text\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sendbutton\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: sendMessage,\n          children: /*#__PURE__*/_jsxDEV(SendOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(Workarea, \"uVcmp/5wV/JafD87DHNwlOKmVkk=\", false, function () {\n  return [useLocation];\n});\n_c = Workarea;\nexport default Workarea;\nvar _c;\n$RefreshReg$(_c, \"Workarea\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useLocation","axios","IconButton","PersonIcon","SendOutlinedIcon","DeleteIcon","io","Messageself","Messageother","MyContext","MyContextMessage","jsxDEV","_jsxDEV","Workarea","_s","ENDPOINT","id","state","message","setNewMessage","text","setText","socket","setSocket","newSocket","on","newMessage","console","log","alert","n","prevMessages","emit","disconnect","senderId","sendMessage","currentTime","Date","hours","getHours","minutes","getMinutes","time","messageObj","Chatid","Senderid","createdAt","updatedAt","post","then","response","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Name","map","elem","index","dataprops","dataprops2","onChange","e","target","value","placeholder","name","type","onClick","_c","$RefreshReg$"],"sources":["D:/mern stack todo/my-app/src/component/workareacomponet/Workarea.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { IconButton } from '@mui/material';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport SendOutlinedIcon from '@mui/icons-material/SendOutlined';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { io } from 'socket.io-client';\r\nimport Messageself from '../messagecomponet/Messageself';\r\nimport Messageother from '../messagecomponet/Messageother';\r\nimport { MyContext, MyContextMessage } from '../contextapi/CreateContext';\r\n\r\nfunction Workarea() {\r\n  const ENDPOINT = 'http://localhost:3001';\r\n  const { id } = useContext(MyContext);\r\n  const { state } = useLocation();\r\n  const { message, setNewMessage } = useContext(MyContextMessage);\r\n  const [text, setText] = useState('');\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const newSocket = io(ENDPOINT);\r\n    setSocket(newSocket);\r\n\r\n    // Handle incoming messages\r\n    newSocket.on('message received', (newMessage) => {\r\n      console.log(\"Received new message:\", newMessage);\r\n      alert(n)\r\n      setNewMessage(prevMessages => [...prevMessages, newMessage]);\r\n    });\r\n\r\n    // Setup and join room on component mount\r\n    newSocket.emit('setup', id);\r\n    newSocket.emit('join chat', '123'); // Assuming '123' is the chat room ID\r\n\r\n    // Clean up the socket connection\r\n    return () => {\r\n      newSocket.disconnect();\r\n    };\r\n  }, [id, state.senderId, setNewMessage]);\r\n\r\n  const sendMessage = () => {\r\n    let currentTime = new Date();\r\n    let hours = currentTime.getHours();\r\n    let minutes = currentTime.getMinutes();\r\n    let time = hours + ':' + minutes;\r\n    \r\n    const messageObj = {\r\n      Chatid: id,\r\n      Senderid: state.senderId,\r\n      text: text,\r\n      createdAt: time,\r\n      updatedAt: time \r\n    };\r\n\r\n    axios.post(`http://localhost:3001/newmessage`, messageObj)\r\n      .then((response) => {\r\n        // Emit new message event to the server using the existing socket\r\n        if (socket) {\r\n          socket.emit('new message', messageObj);\r\n        }\r\n        setText('');\r\n        setNewMessage([...message, messageObj]); // Update local state immediately\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error sending message:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className='main-workarea'>\r\n      <div className=\"chat-head\">\r\n        <IconButton>\r\n          <PersonIcon />\r\n        </IconButton>\r\n        <div className=\"user-info\">\r\n          <p className='title'>{state.Name}</p>\r\n          <p className='timespan'>{state.time}</p>\r\n        </div>\r\n        <div className='delete'>\r\n          <IconButton>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat-container\">\r\n        {message && message.map((elem, index) => (\r\n          <div key={index}>\r\n            {id === elem.Chatid ?\r\n              <Messageself dataprops={elem.text} dataprops2={elem.updatedAt} /> :\r\n              <Messageother dataprops={elem.text} dataprops2={elem.updatedAt} />\r\n            }\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"chat-input\">\r\n        <input onChange={(e) => { setText(e.target.value) }} placeholder='Type Text Here' value={text} name='text' className='input-text' type=\"text\" />\r\n        <div className='sendbutton'>\r\n          <IconButton onClick={sendMessage}>\r\n            <SendOutlinedIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Workarea;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}