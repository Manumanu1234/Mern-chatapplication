{"ast":null,"code":"var _jsxFileName = \"D:\\\\mern stack todo\\\\my-app\\\\src\\\\component\\\\onlineusers\\\\Onlineuser.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport \"./Online.css\";\nimport { IconButton } from '@mui/material';\nimport SearchOutlinedIcon from '@mui/icons-material/SearchOutlined';\nimport Testuser from './Testuser';\nimport { useSelector } from 'react-redux';\nimport { MyContext } from '../contextapi/CreateContext';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Onlineuser() {\n  _s();\n  const light = useSelector(state => state.key);\n  const {\n    id,\n    setId\n  } = useContext(MyContext);\n  const [online, setonline] = useState([]);\n  useEffect(() => {\n    axios.get(`http://localhost:3001/totalonlineusers/${id}`).then(response => {\n      console.log(\"setting totalonline user\");\n      setonline(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"onlineusercontainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `onlinehead${light ? \"\" : \" dark1\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"onlineimg\",\n        src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRbdgywUyi3GeY8033J2rl2M7RnKqyPCQW8dQ&s\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"h1ofonline\",\n        children: \"Online user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `side-bar-text1${light ? \"\" : \" dark1\"}`,\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(SearchOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: `textarea2${light ? \"\" : \" dark1\"}`,\n        type: \"text\",\n        placeholder: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), online.length != 0 ? online.map((elem, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Testuser, {\n          nameprop: elem.Name,\n          id: le\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this);\n    }) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Onlineuser, \"7Iu/nMkRrV06Iq6kBMfq/vW8Jwc=\", false, function () {\n  return [useSelector];\n});\n_c = Onlineuser;\nexport default Onlineuser;\nvar _c;\n$RefreshReg$(_c, \"Onlineuser\");","map":{"version":3,"names":["React","useContext","useEffect","useState","IconButton","SearchOutlinedIcon","Testuser","useSelector","MyContext","axios","jsxDEV","_jsxDEV","Onlineuser","_s","light","state","key","id","setId","online","setonline","get","then","response","console","log","data","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","length","map","elem","index","nameprop","Name","le","_c","$RefreshReg$"],"sources":["D:/mern stack todo/my-app/src/component/onlineusers/Onlineuser.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\r\nimport \"./Online.css\"\r\nimport { IconButton } from '@mui/material'\r\nimport SearchOutlinedIcon from '@mui/icons-material/SearchOutlined';\r\nimport Testuser from './Testuser';\r\nimport { useSelector } from 'react-redux';\r\nimport { MyContext } from '../contextapi/CreateContext';\r\nimport axios from 'axios';\r\nfunction Onlineuser() {\r\n  const light = useSelector((state) => state.key)\r\n  const { id, setId } = useContext(MyContext);\r\n  const [online, setonline] = useState([])\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:3001/totalonlineusers/${id}`).then((response) => {\r\n      console.log(\"setting totalonline user\");\r\n      setonline(response.data)\r\n    })\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className='onlineusercontainer'>\r\n      <div className={`onlinehead${light ? \"\" : \" dark1\"}`}>\r\n\r\n        <img className='onlineimg' src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRbdgywUyi3GeY8033J2rl2M7RnKqyPCQW8dQ&s\" alt=\"\" />\r\n\r\n        <h1 className='h1ofonline'>Online user</h1>\r\n      </div>\r\n\r\n      {/* search bar */}\r\n      <div className={`side-bar-text1${light ? \"\" : \" dark1\"}`}>\r\n        <IconButton>\r\n          <SearchOutlinedIcon />\r\n        </IconButton>\r\n\r\n        <input className={`textarea2${light ? \"\" : \" dark1\"}`} type=\"text\" placeholder='Search' />\r\n      </div>\r\n\r\n      {/* textuser componet */}\r\n      {online.length !=0 ?\r\n        online.map((elem,index) => {\r\n          return (\r\n            <div key={index}>\r\n                <Testuser nameprop={elem.Name} id={le}/>\r\n            </div>\r\n          )\r\n        })\r\n        : \"\"}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Onlineuser"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}