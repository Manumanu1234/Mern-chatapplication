{"ast":null,"code":"var _jsxFileName = \"D:\\\\mern stack todo\\\\my-app\\\\src\\\\component\\\\workareacomponet\\\\Workarea.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { IconButton } from '@mui/material';\nimport PersonIcon from '@mui/icons-material/Person';\nimport SendOutlinedIcon from '@mui/icons-material/SendOutlined';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { io } from 'socket.io-client';\nimport Messageself from '../messagecomponet/Messageself';\nimport Messageother from '../messagecomponet/Messageother';\nimport { MyContext, MyContextMessage } from '../contextapi/CreateContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Workarea() {\n  _s();\n  const ENDPOINT = 'http://localhost:3001';\n  const {\n    id\n  } = useContext(MyContext);\n  const {\n    state\n  } = useLocation();\n  const {\n    message,\n    setNewMessage\n  } = useContext(MyContextMessage);\n  const [data, setData] = useState(null);\n  const [text, setText] = useState('');\n  useEffect(() => {\n    // Fetch user data based on senderId from state\n    axios.get(`http://localhost:3001/finduserlogin/${state.senderId}`).then(response => {\n      setData(response.data.Name);\n    }).catch(error => {\n      console.error('Error fetching user data:', error);\n    });\n\n    // Initialize socket connection\n    const socket = io(ENDPOINT);\n    socket.on('message received', newMessage => {\n      // Update messages when a new message is received\n      setNewMessage([...message, newMessage]);\n    });\n    return () => {\n      socket.disconnect(); // Clean up socket connection on component unmount\n    };\n  }, [state.senderId, setNewMessage]); // Dependency array to re-run effect when senderId or setNewMessage changes\n\n  const sendMessage = () => {\n    let currentTime = new Date();\n    let hours = currentTime.getHours();\n    let minutes = currentTime.getMinutes();\n    let time = hours + ':' + minutes;\n    const messageObj = {\n      Chatid: id,\n      senderid: state.senderId,\n      text: text\n    };\n    axios.post(`http://localhost:3001/newmessage`, messageObj).then(response => {\n      const socket = io(ENDPOINT);\n      socket.emit('new message', messageObj);\n      setText('');\n      setNewMessage([...message, messageObj]); // Update local state immediately\n    }).catch(error => {\n      console.error('Error sending message:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-workarea\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-head\",\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title\",\n          children: state.Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"timespan\",\n          children: state.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"delete\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: message && message.map((elem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: id === elem.Chatid ? /*#__PURE__*/_jsxDEV(Messageself, {\n          dataprops: elem.text,\n          dataprops2: elem.updatedAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Messageother, {\n          dataprops: elem.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => {\n          setText(e.target.value);\n        },\n        placeholder: \"Type Text Here\",\n        value: text,\n        name: \"text\",\n        className: \"input-text\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sendbutton\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: sendMessage,\n          children: /*#__PURE__*/_jsxDEV(SendOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(Workarea, \"+6P7puThQGqkwFlIcZOqBD/lioA=\", false, function () {\n  return [useLocation];\n});\n_c = Workarea;\nexport default Workarea;\nvar _c;\n$RefreshReg$(_c, \"Workarea\");","map":{"version":3,"names":["useContext","useEffect","useState","useLocation","axios","IconButton","PersonIcon","SendOutlinedIcon","DeleteIcon","io","Messageself","Messageother","MyContext","MyContextMessage","jsxDEV","_jsxDEV","Workarea","_s","ENDPOINT","id","state","message","setNewMessage","data","setData","text","setText","get","senderId","then","response","Name","catch","error","console","socket","on","newMessage","disconnect","sendMessage","currentTime","Date","hours","getHours","minutes","getMinutes","time","messageObj","Chatid","senderid","post","emit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","elem","index","dataprops","dataprops2","updatedAt","onChange","e","target","value","placeholder","name","type","onClick","_c","$RefreshReg$"],"sources":["D:/mern stack todo/my-app/src/component/workareacomponet/Workarea.jsx"],"sourcesContent":["import { useContext, useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { IconButton } from '@mui/material';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport SendOutlinedIcon from '@mui/icons-material/SendOutlined';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { io } from 'socket.io-client';\r\nimport Messageself from '../messagecomponet/Messageself';\r\nimport Messageother from '../messagecomponet/Messageother';\r\nimport { MyContext, MyContextMessage } from '../contextapi/CreateContext';\r\n\r\nfunction Workarea() {\r\n  const ENDPOINT = 'http://localhost:3001';\r\n  const { id } = useContext(MyContext);\r\n  const { state } = useLocation();\r\n  const { message, setNewMessage } = useContext(MyContextMessage);\r\n  const [data, setData] = useState(null);\r\n  const [text, setText] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch user data based on senderId from state\r\n    axios.get(`http://localhost:3001/finduserlogin/${state.senderId}`)\r\n      .then((response) => {\r\n        setData(response.data.Name);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching user data:', error);\r\n      });\r\n\r\n    // Initialize socket connection\r\n    const socket = io(ENDPOINT);\r\n    socket.on('message received', (newMessage) => {\r\n      // Update messages when a new message is received\r\n      setNewMessage([...message, newMessage]);\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect(); // Clean up socket connection on component unmount\r\n    };\r\n  }, [state.senderId, setNewMessage]); // Dependency array to re-run effect when senderId or setNewMessage changes\r\n\r\n  const sendMessage = () => {\r\n    let currentTime = new Date()\r\n    let hours = currentTime.getHours();\r\n    let minutes = currentTime.getMinutes();\r\n    let time = hours + ':' + minutes;\r\n    const messageObj = {\r\n      Chatid: id,\r\n      senderid: state.senderId,\r\n      text: text\r\n    };\r\n\r\n    axios.post(`http://localhost:3001/newmessage`, messageObj)\r\n      .then((response) => {\r\n        const socket = io(ENDPOINT);\r\n        socket.emit('new message', messageObj);\r\n        setText('');\r\n        setNewMessage([...message, messageObj]); // Update local state immediately\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error sending message:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className='main-workarea'>\r\n      <div className=\"chat-head\">\r\n        <IconButton>\r\n          <PersonIcon />\r\n        </IconButton>\r\n        <div className=\"user-info\">\r\n          <p className='title'>{state.Name}</p>\r\n          <p className='timespan'>{state.time}</p>\r\n        </div>\r\n        <div className='delete'>\r\n          <IconButton>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat-container\">\r\n        {message && message.map((elem, index) => (\r\n          <div key={index}>\r\n            {id === elem.Chatid ?\r\n              <Messageself dataprops={elem.text} dataprops2={elem.updatedAt} /> :\r\n              <Messageother dataprops={elem.text} />\r\n            }\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"chat-input\">\r\n        <input onChange={(e) => { setText(e.target.value) }} placeholder='Type Text Here' value={text} name='text' className='input-text' type=\"text\" />\r\n        <div className='sendbutton'>\r\n          <IconButton onClick={sendMessage}>\r\n            <SendOutlinedIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Workarea;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}