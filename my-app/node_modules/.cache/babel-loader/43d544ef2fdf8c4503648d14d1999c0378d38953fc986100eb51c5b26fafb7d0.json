{"ast":null,"code":"const express = require(\"express\");\nconst cors = require('cors');\nconst cookieParser = require(\"cookie-parser\");\nconst session = require('express-session');\nconst db = require('./connection/connection');\nconst producthelper = require('./connection/productfunction/productfunction');\nconst bodyParser = require(\"body-parser\");\nconst app = express();\napp.use(cors({\n  origin: [\"http://localhost:3006\"],\n  methods: [\"POST\", \"GET\"],\n  credentials: true\n}));\napp.use(express.json());\napp.use(cookieParser());\napp.use(bodyParser.json());\ndb.connect();\napp.use(session({\n  secret: \"key\",\n  resave: false,\n  saveUninitialized: false,\n  cookie: {\n    secure: false,\n    maxAge: 600000\n  }\n}));\napp.post('/', (req, res) => {\n  producthelper.dataaddingfunction(req.body).then(response => {\n    console.log(response);\n    if (response.status == false) {\n      res.status(200).json({\n        message: 'Data added successfully',\n        data: response\n      });\n    } else {\n      req.session.user = true;\n      res.json({\n        data: response\n      });\n      req.session.save();\n    }\n  });\n});\napp.post('/login', (req, res) => {\n  console.log(\"Request body:\", req.body);\n  producthelper.loginfunction(req.body).then(response => {\n    console.log(\"Login response:\", response);\n    if (response.status == true) {\n      req.session.user = true;\n      req.session.values123 = 50;\n      req.session.save(); // Save the session changes\n      console.log(\"Session user set to true\");\n    } else {\n      req.session.user = false;\n      console.log(\"Session user set to false\");\n    }\n    res.json(response.status);\n  });\n});\napp.get(\"/validitychecking\", (req, res) => {\n  console.log(\"Session user:\", req.session.user, req.session.values123);\n  if (req.session.user === undefined) {\n    res.json({\n      isLoggedIn: false\n    });\n  } else {\n    res.json({\n      isLoggedIn: true\n    });\n  }\n});\nconst PORT = 3001;\napp.listen(PORT, function (err) {\n  if (err) console.log(err);\n  console.log(\"Server listening on PORT\", PORT);\n});","map":{"version":3,"names":["express","require","cors","cookieParser","session","db","producthelper","bodyParser","app","use","origin","methods","credentials","json","connect","secret","resave","saveUninitialized","cookie","secure","maxAge","post","req","res","dataaddingfunction","body","then","response","console","log","status","message","data","user","save","loginfunction","values123","get","undefined","isLoggedIn","PORT","listen","err"],"sources":["D:/mern stack todo/my-app/src/component/workareacomponet/Welcome.jsx"],"sourcesContent":["const express = require(\"express\");\r\nconst cors = require('cors');\r\nconst cookieParser = require(\"cookie-parser\");\r\nconst session = require('express-session');\r\nconst db = require('./connection/connection');\r\nconst producthelper = require('./connection/productfunction/productfunction');\r\nconst bodyParser = require(\"body-parser\");\r\n\r\nconst app = express();\r\n\r\napp.use(cors({\r\n   origin: [\"http://localhost:3006\"],\r\n   methods: [\"POST\", \"GET\"],\r\n   credentials: true\r\n}));\r\n\r\napp.use(express.json());\r\napp.use(cookieParser());\r\napp.use(bodyParser.json());\r\ndb.connect();\r\n\r\napp.use(session({\r\n   secret: \"key\",\r\n   resave: false,\r\n   saveUninitialized: false,\r\n   cookie: { secure: false, maxAge: 600000 }\r\n}));\r\n\r\napp.post('/', (req, res) => {\r\n   producthelper.dataaddingfunction(req.body).then((response) => {\r\n      console.log(response);\r\n      if (response.status == false) {\r\n         res.status(200).json({ message: 'Data added successfully', data: response });\r\n      } else {\r\n         req.session.user = true;\r\n         res.json({ data: response });\r\n         req.session.save();\r\n      }\r\n   });\r\n});\r\n\r\napp.post('/login', (req, res) => {\r\n   console.log(\"Request body:\", req.body);\r\n   producthelper.loginfunction(req.body).then((response) => {\r\n      console.log(\"Login response:\", response);\r\n      if (response.status == true) {\r\n         req.session.user = true;\r\n         req.session.values123 = 50;\r\n         req.session.save(); // Save the session changes\r\n         console.log(\"Session user set to true\");\r\n      } else {\r\n         req.session.user = false;\r\n         console.log(\"Session user set to false\");\r\n      }\r\n      res.json(response.status);\r\n   });\r\n});\r\n\r\napp.get(\"/validitychecking\", (req, res) => {\r\n   console.log(\"Session user:\", req.session.user, req.session.values123);\r\n   if (req.session.user === undefined) {\r\n      res.json({ isLoggedIn: false });\r\n   } else {\r\n      res.json({ isLoggedIn: true });\r\n   }\r\n});\r\n\r\nconst PORT = 3001;\r\napp.listen(PORT, function (err) {\r\n   if (err) console.log(err);\r\n   console.log(\"Server listening on PORT\", PORT);\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}